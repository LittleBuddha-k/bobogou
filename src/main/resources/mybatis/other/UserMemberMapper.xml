<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.littlebuddha.bobogou.modules.mapper.other.UserMemberMapper">
    <sql id="userMemberUserColumns">
        a.id AS "id",
        a.user_id AS "userId",
        a.real_name AS "realName",
        a.phone AS "phone",
        a.card_no AS "cardNo",
        a.name AS "name",
        a.type AS "type",
        a.province_id AS "provinceId",
        a.province AS "province",
        a.city_id AS "cityId",
        a.city AS "city",
        a.district_id AS "districtId",
        a.district AS "district",
        a.street_id AS "streetId",
        a.street AS "street",
        a.real_address AS "realAddress",
        a.business_license AS "businessLicense",
        a.begin_time AS "beginTime",
        a.end_time AS "endTime",
        a.contract_url AS "contractUrl",
        a.province_user_id AS "provinceUserId",
        a.city_user_id AS "cityUserId",
        a.district_user_id AS "districtUserId",
        a.status AS "status",
        a.refuse_reason AS "refuseReason",
        a.vip_status AS "vipStatus",
        a.is_deleted AS "isDeleted",
        a.create_time AS "createTime",
        a.update_time AS "updateTime",
        a.account_id AS "accountId"
    </sql>

    <select id="get" resultType="com.littlebuddha.bobogou.modules.entity.other.UserMember">
        SELECT
        <include refid="userMemberUserColumns"/>
        FROM ud_user_member a
        WHERE id=#{id}
    </select>

    <select id="getByUser" resultType="com.littlebuddha.bobogou.modules.entity.other.UserMember">
        SELECT
        <include refid="userMemberUserColumns"/>
        FROM ud_user_member a
        WHERE a.user_id=#{userId}
    </select>

    <select id="findList" resultType="com.littlebuddha.bobogou.modules.entity.other.UserMember">
        SELECT
        <include refid="userMemberUserColumns"/>
        FROM ud_user_member a
        <where>
            a.is_deleted = #{DEL_FLAG_NORMAL}
            <!--<if test="phone != null and phone != ''">
                AND a.phone LIKE concat('%',#{phone},'%')
            </if>
            <if test="password != null and password != ''">
                AND a.pssword LIKE concat('%',#{password},'%')
            </if>
            <if test="nickname != null and nickname != ''">
                AND a.nickname LIKE concat('%',#{nickname},'%')
            </if>-->
            <if test="userId != null and userId != ''">
                AND a.user_id = #{userId}
            </if>
        </where>
        <choose>
            <when test="orderBy !=null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findRecoveryList" resultType="com.littlebuddha.bobogou.modules.entity.other.UserMember">
        SELECT
        <include refid="userMemberUserColumns"/>
        FROM ud_user_member a
        <where>
            a.is_deleted = #{DEL_FLAG_DELETE}
            <if test="sex != null">
                AND and a.sex = #{sex}
            </if>
        </where>
        <choose>
            <when test="orderBy !=null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ud_user_member(
            user_id,
            real_name,
            phone,
            card_no,
            name,
            type,
            province_id,
            province,
            city_id,
            city,
            district_id,
            district,
            street_id,
            street,
            real_address,
            business_license,
            begin_time,
            end_time,
            contract_url,
            province_user_id,
            city_user_id,
            district_user_id,
            status,
            refuse_reason,
            vip_status,
            is_deleted,
            create_time,
            update_time,
            account_id
        )VALUES (
            #{userId},
            #{realName},
            #{phone},
            #{cardNo},
            #{name},
            #{type},
            #{provinceId},
            #{province},
            #{cityId},
            #{city},
            #{districtId},
            #{district},
            #{streetId},
            #{street},
            #{realAddress},
            #{businessLicense},
            #{beginTime},
            #{endTime},
            #{contractUrl},
            #{provinceUserId},
            #{cityUserId},
            #{districtUserId},
            #{status},
            #{refuseReason},
            #{vipStatus},
            #{isDeleted},
            #{createTime},
            #{updateTime},
            #{accountId}
        )
    </insert>

    <update id="update">
        UPDATE ud_user_member SET
            user_id = #{userId},
            real_name = #{realName},
            phone = #{phone},
            card_no = #{cardNo},
            name = #{name},
            type = #{type},
            province_id = #{provinceId},
            province = #{province},
            city_id = #{cityId},
            city = #{city},
            district_id = #{districtId},
            district = #{district},
            street_id = #{streetId},
            street = #{street},
            real_address = #{realAddress},
            business_license = #{businessLicense},
            begin_time = #{beginTime},
            end_time = #{endTime},
            contract_url = #{contractUrl},
            province_user_id = #{provinceUserId},
            city_user_id = #{cityUserId},
            district_user_id = #{districtUserId},
            status = #{status},
            refuse_reason = #{refuseReason},
            vip_status = #{vipStatus},
            is_deleted = #{isDeleted},
            create_time = #{createTime},
            update_time = #{updateTime},
            account_id = #{accountId}
        WHERE id=#{id}
    </update>

    <update id="deleteByLogic">
        UPDATE ud_user_member SET is_deleted = #{DEL_FLAG_DELETE}
        WHERE id=#{id}
    </update>

    <update id="recovery">
        UPDATE ud_user_member SET is_deleted = #{DEL_FLAG_NORMAL}
        WHERE id=#{id}
    </update>

    <delete id="deleteByPhysics">
        DELETE FROM ud_user_member
        WHERE id=#{id}
    </delete>
</mapper>