<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.littlebuddha.bobogou.modules.mapper.data.GoodsClassifyMapper">
    <sql id="goodsClassifyColumns">
        a.id AS "id",
        a.classify_id AS "classifyId",
        a.second_classify_id AS "secondClassifyId",
        a.reclassify_id AS "reclassifyId",
        a.goods_id AS "goodsId",
        a.level AS "level",
        a.is_deleted AS "isDeleted",
        a.create_time AS "createTime",
        a.update_time AS "updateTime",
        b.name AS "levelOneName",
        c.name AS "levelTwoName",
        d.name AS "levelThreeName"
    </sql>

    <sql id="goodsClassifyJoins">
        LEFT JOIN mb_classify b ON a.classify_id = b.id
        LEFT JOIN mb_classify c ON a.second_classify_id = c.id
        LEFT JOIN mb_classify d ON a.reclassify_id = d.id
    </sql>

    <select id="get" resultType="com.littlebuddha.bobogou.modules.entity.data.GoodsClassify">
        SELECT
        <include refid="goodsClassifyColumns"/>
        FROM md_goods_classify a
        <include refid="goodsClassifyJoins"/>
        WHERE a.id=#{id}
    </select>

    <select id="getByGoods" resultType="com.littlebuddha.bobogou.modules.entity.data.GoodsClassify">
        SELECT
        <include refid="goodsClassifyColumns"/>
        FROM md_goods_classify a
        <include refid="goodsClassifyJoins"/>
        <where>
            a.is_deleted = #{DEL_FLAG_NORMAL}
            <!-- 判断条件参数是否为空 -->
            <if test="goodsId != null and goodsId != ''">
                AND a.goods_id = #{goodsId}
            </if>
        </where>
    </select>

    <select id="findList" resultType="com.littlebuddha.bobogou.modules.entity.data.GoodsClassify">
        SELECT
        <include refid="goodsClassifyColumns"/>
        FROM md_goods_classify a
        <include refid="goodsClassifyJoins"/>
        <where>
            a.is_deleted = #{DEL_FLAG_NORMAL}
            <!-- 判断条件参数是否为空 -->
        </where>
        <choose>
            <when test="orderBy !=null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>

    <!--删除的时候查询商品分类关联表中是否有关联的分类数据如果有则不能删除-->
    <select id="findByClassify" resultType="com.littlebuddha.bobogou.modules.entity.data.GoodsClassify">
        SELECT
        <include refid="goodsClassifyColumns"/>
        FROM md_goods_classify a
        <include refid="goodsClassifyJoins"/>
        <where>
            a.is_deleted = #{DEL_FLAG_NORMAL}
            <!-- 判断条件参数是否为空 -->
            <if test="classifyId != null and classifyId != ''">
                AND a.classify_id = #{classifyId}
            </if>
            <if test="secondClassifyId != null and secondClassifyId != ''">
                OR a.second_classify_id = #{secondClassifyId}
            </if>
            <if test="reclassifyId != null and reclassifyId != ''">
                OR a.reclassify_id = #{reclassifyId}
        </if>
        </where>
        <choose>
            <when test="orderBy !=null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="com.littlebuddha.bobogou.modules.entity.data.GoodsClassify">
        SELECT
        <include refid="goodsClassifyColumns"/>
        FROM md_goods_classify a
        <include refid="goodsClassifyJoins"/>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">

            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

    <!--与商品做关联插入id=商品id-->
    <insert id="insert">
        INSERT INTO md_goods_classify(
            id,
            classify_id,
            second_classify_id,
            reclassify_id,
            goods_id,
            level,
            is_deleted,
            create_time,
            update_time
        )VALUES (
            #{id},
            #{classifyId},
            #{secondClassifyId},
            #{reclassifyId},
            #{goodsId},
            #{level},
            #{isDeleted},
            #{createTime},
            #{updateTime}
        )
    </insert>

    <update id="update">
        UPDATE md_goods_classify SET
            classify_id = #{classifyId},
            second_classify_id = #{secondClassifyId},
            reclassify_id = #{reclassifyId},
            goods_id = #{goodsId},
            level = #{level},
            is_deleted = #{isDeleted},
            create_time = #{createTime},
            update_time = #{updateTime}
        WHERE id=#{id}
    </update>

    <update id="deleteByLogic">
        UPDATE md_goods_classify SET is_deleted = #{DEL_FLAG_DELETE}
        WHERE id=#{id}
    </update>

    <update id="deleteLogicByGoods">
        UPDATE md_goods_classify SET is_deleted = #{DEL_FLAG_DELETE}
        WHERE goods_id=#{goodsId}
    </update>

    <update id="recovery">
        UPDATE md_goods_classify SET is_deleted = #{DEL_FLAG_NORMAL}
        WHERE id=#{id}
    </update>

    <delete id="deleteByPhysics">
        DELETE FROM md_goods_classify
        WHERE id=#{id}
    </delete>

    <delete id="deletePhysicsByGoods">
        DELETE FROM md_goods_classify
        WHERE goods_id=#{goodsId}
    </delete>
</mapper>